/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jeffreysanti.fractalengine;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import javax.swing.DefaultListModel;
import javax.swing.Timer;

/**
 *
 * @author jeffrey
 */
public class ServerStatusDialog extends javax.swing.JFrame implements ServerMessageListener {

    /**
     * Creates new form ServerStatusDialog
     */
    public ServerStatusDialog() {
        initComponents();
        
        lstQueue.setModel(new DefaultListModel());
        lstRendering.setModel(new DefaultListModel());
        
        ServerConnection.getInst().addServerMessageListener("STAT", this);
        
        timer = new javax.swing.Timer(2000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                update();
            }
        });
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstRendering = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstQueue = new javax.swing.JList();
        btnCancel = new javax.swing.JButton();
        lblAdmin = new javax.swing.JLabel();
        txtJobSel = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Server Status");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Rendering Jobs:");

        jLabel2.setText("Job Queue:");

        lstRendering.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstRendering);

        lstQueue.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstQueue);

        btnCancel.setText("Cancel Job");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblAdmin.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(95, 95, 95)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtJobSel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(txtJobSel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        if(ServerConnection.getInst().isAdmin()){
            lblAdmin.setText("You are permitted to cancel any jobs.");
        }else{
            lblAdmin.setText("Only your own jobs will actually cancel.");
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        timer.stop();
    }//GEN-LAST:event_formWindowClosing

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        String txt = txtJobSel.getText();
        
        // remove tags
        txt = txt.replaceAll("M", "");
        txt = txt.replaceAll("A", "");
        txt = txt.replaceAll("!", "");
        if(ServerConnection.getInst().isConnected()){
            ServerConnection.getInst().addPacketToQueue("CJOB", txt, null);
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    public void update(){
        if(ServerConnection.getInst().isConnected()){
            ServerConnection.getInst().addPacketToQueue("STAT", "", null);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JList lstQueue;
    private javax.swing.JList lstRendering;
    private javax.swing.JTextField txtJobSel;
    // End of variables declaration//GEN-END:variables

    private Timer timer;

    @Override
    public void onReceivePacket(String head, int len, DataInputStream ds) {
        String resp = ServerPacket.extractString(ds, len);
        
        if(!resp.contains("#"))
            return;
        
        ((DefaultListModel)lstQueue.getModel()).clear();
        String jobQueue = resp.substring(0, resp.indexOf("#"));
        String [] jobsInQueue = jobQueue.split(",");
        for(String j : jobsInQueue){
            j = j.replaceAll(",", "");
            if(j.length() == 0)
                continue;
            ((DefaultListModel)lstQueue.getModel()).addElement(j);
        }
        
        String rendering = resp.substring(resp.indexOf("#")+1);
        String [] jobsRendering = rendering.split(",");
        ((DefaultListModel)lstRendering.getModel()).clear();
        for(String j : jobsRendering){
            j = j.replaceAll(",", "");
            if(j.length() == 0)
                continue;
            ((DefaultListModel)lstRendering.getModel()).addElement(j);
        }
        return;
    }
}
